# -- TPM plugins ---------------------------------------------------------------

# enabled plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-processes ':all:'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'off' # enable/disable auto restore
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @sidebar-tree-command 'tree -C'

# disabled plugins
#
# set -g @plugin 'laishulu/emacs-tmux-pane'
# set -g @plugin 'tmux-plugins/tmux-battery'
# set -g @plugin 'tmux-plugins/tmux-cpu'
# set -g status-right '#{cpu_bg_color} CPU: #{cpu_icon} #{cpu_percentage} | %a %h-%d %H:%M '
# set -g @plugin "arcticicestudio/nord-tmux"

# Initialize TMUX plugin manager
run -b '~/.tmux/plugins/tpm/tpm'

# -- Basic config --------------------------------------------------------------

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# Default/alterative shell to run in tmux
set-option -g default-shell $SHELL
set -g default-command "${SHELL}"

# How is default-terminal compared to tmux terminal-overrides
#
# REF: https://unix.stackexchange.com/questions/568260/how-is-default-terminal-compared-to-tmux-terminal-overrides
#
# Default TERM inside tmux, so should match screen* or tmux*. This tells
# applications inside tmux what the capabilities are for tmux itself.
set -g default-terminal "tmux-256color"  # "screen-256color"

# terminal-overrides matches TERM outside tmux and allows you to modify the
# capabilities tmux uses when it talks to the terminal it is running it.
set -ga terminal-overrides "xterm-256color"

setw -g xterm-keys on

# faster command sequences
set -s escape-time 10

# increase repeat timeout
set -sg repeat-time 300

set -s focus-events on

# remap prefix
unbind C-b
set-option -g prefix M-z
bind-key M-z send-prefix

# expect UTF-8 (tmux < 2.2)
set -q -g status-utf8 on
setw -q -g utf8 on

# boost history
set -g history-limit 5000

# -- display -------------------------------------------------------------------

# start windows numbering at 1
set -g base-index 1

# make pane numbering consistent with windows
setw -g pane-base-index 1

# rename window to reflect current program
setw -g automatic-rename off

# renumber windows when a window is closed
set -g renumber-windows on

# set terminal title
set -g set-titles on

# slightly longer pane indicators display time
set -g display-panes-time 800

# slightly longer status messages display time
set -g display-time 1000

# redraw status line every 10 seconds
set -g status-interval 2

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history

# activity
set -g monitor-activity on
set -g visual-activity off

# mouse
set -g mouse on

# -- creation ------------------------------------------------------------------

# create session
bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# create a new window next to the current window
bind c new-window -a

# create a named window next to the current window
bind C command-prompt -p "Name of new window: " "new-window -n '%%' -a"

# Keep default split keys
# bind '"' split-window -h
# bind % split-window -v

# -- Emacs editor -------------------------------------------------------------
#
# open pane at desired places to edit
bind | split-window -h "emacsclient -t"
bind - split-window -v "emacsclient -t"
#
# open new window to edit
bind F1 new-window "emacsclient -tc"
#
# Display org-agenda in new window
bind M-F1 new-window "emacsclient -tc --eval '(org-agenda nil \"d\")'"
#
# "tmux display-message -p '#W' | xargs -I{} emacsclient -tc --eval '(spacemacs/helm-perspectives {})'"
# new-window "emacsclient -tc --eval '(spacemacs/helm-perspectives)'"

# -- navigation ----------------------------------------------------------------

# switch pane using fzf (with fp function)
bind-key 0 run "tmux split-window -l 12 'bash -ci fp'"

# tab-like window switching (-n: no prior escape seq)
bind -r < { swap-window -t -; previous-window }
bind -r > { swap-window -t +; next-window }

# move to last active window
bind Tab last-window

# -- resizing ------------------------------------------------------------------

setw -g aggressive-resize on
bind -r M-Left  resize-pane -L 1
bind -r M-Right resize-pane -R 1
bind -r M-Up    resize-pane -U 1
bind -r M-Down  resize-pane -D 1

# -- Broadcast: send a command to all panes ------------------------------------
#
# REF: https://stackoverflow.com/questions/16325449/how-to-send-a-command-to-all-panes-in-tmux

bind C-x setw synchronize-panes on
bind M-x setw synchronize-panes off

# -- buffers -------------------------------------------------------------------

# list paste buffers
bind y list-buffers

# paste from the top paste buffer
# bind c paste-buffer

# choose which buffer to paste from
bind C-y choose-buffer

# -- custom appearance ---------------------------------------------------------

# (Github Dark) Colors for Tmux
#
# REF: https://github.com/projekt0n/github-theme-contrib/tree/main/themes/tmux

set -g mode-style "fg=#e6edf3,bg=#30363d"
set -g message-style "fg=#30363d,bg=#e6edf3"
set -g message-command-style "fg=#30363d,bg=#e6edf3"

# -- pane border ---------------------------------------------------------------

# The copied color theme (Github Dark)
#
#   set -g pane-border-style "fg=#e6edf3"
#   set -g pane-active-border-style "fg=#2f81f7"
#
# I Added background color to make borders more visible
set -g pane-border-style "fg=#e6edf3,bg=#30363d"
set -g pane-active-border-style "fg=#2f81f7,bg=#30363d"

# Show tmux pane-status only when there is more than one pane in window
#
# REF: https://copyprogramming.com/howto/tmux-current-pane-border-not-obvious#show-tmux-pane-status-only-when-there-is-more-than-one-pane-in-window
#
is_many="if [ #{window_panes} -eq 1 ]; then exit 1; fi"
set-hook -g window-layout-changed 'if-shell "$is_many" "set-option -w pane-border-status bottom" "set-option -w pane-border-status off"'

# -- status bar ---------------------------------------------------------------

set -g status "on"
set -g status-justify "left"
set -g status-style "fg=#2f81f7,bg=#e6edf3"
set -g status-left-length "100"
set -g status-right-length "100"
set -g status-left-style NONE
set -g status-right-style NONE
set -g status-left "#[fg=#e6edf3,bg=#2f81f7,bold] #S #[fg=#2f81f7,bg=#e6edf3,nobold,nounderscore,noitalics]î‚°"
set -g status-right "#[fg=#e6edf3,bg=#e6edf3,nobold,nounderscore,noitalics]î‚²#[fg=#e6edf3,bg=#e6edf3] #{prefix_highlight} #[fg=#babbbd,bg=#e6edf3,nobold,nounderscore,noitalics]î‚²#[fg=#30363d,bg=#babbbd] %Y-%m-%d î‚³ %I:%M %p #[fg=#0366d6,bg=#babbbd,nobold,nounderscore,noitalics]î‚²#[fg=#e6edf3,bg=#0366d6,bold] #h "

# Use Ctrl+F3 Combo to toggle the visibility.
#
# REF: https://superuser.com/questions/420776/can-you-toggle-the-visibility-of-the-status-bar-in-tmux
bind-key -n C-F3 set-option -g status

# -- window status -------------------------------------------------------------

setw -g window-status-activity-style "underscore,fg=#6e7681,bg=#e6edf3"
setw -g window-status-separator ""
setw -g window-status-style "NONE,fg=#ffffff,bg=#e6edf3"
setw -g window-status-format "#[fg=#e6edf3,bg=#e6edf3,nobold,nounderscore,noitalics]î‚°#[fg=#495058,bg=#e6edf3,nobold,nounderscore,noitalics] #I î‚± #W #F #[fg=#e6edf3,bg=#e6edf3,nobold,nounderscore,noitalics]î‚°"
setw -g window-status-current-format "#[fg=#e6edf3,bg=#3fb950,nobold,nounderscore,noitalics]î‚°#[fg=#30363d,bg=#3fb950,bold] #I î‚± #W [ðŸ–¿ #{pane_current_path}] #[fg=#3fb950,bg=#e6edf3,nobold,nounderscore,noitalics]î‚°"