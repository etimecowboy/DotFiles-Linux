#!/usr/bin/env bash
# changed from knmac's dotfiles
# REF: https://github.com/knmac/.dotfiles/tree/master/lf/.config/lf

CACHE="$HOME/.cache/lf/thumbnail.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | awk '{print $1}')"
mkdir -p "$HOME/.cache/lf"

preview_text() {
    file="$1"
    shift
    if command -v bat > /dev/null 2>&1; then
        # bat --color=always --style=plain --pager=never "$file" "$@"
        bat --color=always --style=numbers --pager=never "$file" "$@"
    else
        cat "$file"
    fi
}

preview_metainfo() {
    file="$1"
    if command -v  exiftool > /dev/null 2>&1; then
        exiftool "$file"
    else
        echo "No META data"
        exit 1
    fi
}

preview_videoinfo() {
    file="$1"
    if command -v  mediainfo > /dev/null 2>&1; then
        mediainfo "$file"
    else
        preview_metainfo "$file"
    fi
}

preview_audioinfo() {
    file="$1"
    if command -v  soxi > /dev/null 2>&1; then
        soxi "$file"
    else
        preview_metainfo "$file"
    fi
}

preview_image() {
    file=$1
    if command -v kitten > /dev/null 2>&1; then
        w=$2
        h=$3
        x=$4
        y=$5

        # Rescale the image
        w=$(( w * 99 / 100 ))
        h=$(( h * 99 / 100 ))
        y=$(( y + 1 ))

        if [[ "$( file -Lb --mime-type "$file")" =~ ^image ]]; then
            # kitty +icat --silent --transfer-mode file --place "${w}x${h}@${x}x${y}" "$file"
            kitten icat --transfer-mode file --stdin no --place "${w}x${h}@${x}x${y}" "$file" < /dev/null > /dev/tty
            exit 1
        fi
    else
        preview_metainfo "$file"
        exit 0
    fi

    pistol "$file"
}

preview_md() {
	  file="$1"
	  shift
	  if command -v glow > /dev/null 2>&1; then
		    glow "$file"
	  elif command -v mdcat > /dev/null 2>&1; then
		    mdcat "$file"
    else
        preview_text --language=markdown "$file"
    fi
}

preview_doc() {
    file="$1"
    if command -v catdoc > /dev/null 2>&1; then
        catdoc "$file"
    elif command -v textutil > /dev/null 2>&1; then
        textutil -stdout -cat txt "$file" | \
            # bat --color=always --style=numbers --pager=never
            preview_text "$file"
    fi
}

preview_docx() {
    file_docx="$1"
    file_txt="${file_docx/%.docx/.txt}"

    # MacOS
    if command -v docx2txt.sh > /dev/null 2>&1; then
        docx2txt.sh "$file_docx" > /dev/null
    # Linux
    elif command -v  docx2txt > /dev/null 2>&1; then
        docx2txt < "$file_docx"
    else
        preview_metainfo "$file_docx"
    fi

    preview_text "$file_txt"
    rm "$file_txt"
}

preview_excel() {
    file="$1"
    if command -v  ssconvert > /dev/null 2>&1; then
        ssconvert --export-type=Gnumeric_stf:stf_csv "$file" "fd://1" | \
            preview_text --language=csv "$file"
    else
        preview_metainfo "$file"
    fi
}

preview_epub() {
    file="$1"
    if command -v  epub-thumbnailer > /dev/null 2>&1; then
        if [ ! -f "$CACHE" ]; then
            epub-thumbnailer "$file" "$CACHE" 1024
        fi
    elif command -v  gnome-epub-thumbnailer > /dev/null 2>&1; then
        if [ ! -f "$CACHE" ]; then
            gnome-epub-thumbnailer -s 1024 "$file" "$CACHE"
        fi
    else
        preview_metainfo "$file"
    fi

    preview_image "$CACHE" "$2" "$3" "$4" "$5"
}

preview_pdf() {
    file="$1"
    if command -v pdftoppm > /dev/null 2>&1; then
        if [ ! -f "${CACHE}.jpg" ]; then
            pdftoppm -jpeg -f 1 -singlefile "$file" "$CACHE"
        fi
    else
        preview_metainfo "$file"
    fi

    preview_image "${CACHE}.jpg" "$2" "$3" "$4" "$5"
}

preview_comic() {
    file="$1"
    if command -v comicthumb > /dev/null 2>&1; then
        if [ ! -f "$CACHE" ]; then
            comicthumb "$file" "$CACHE" 1024
        fi
    else
        preview_metainfo "$file"
    fi

    preview_image "$CACHE" "$2" "$3" "$4" "$5"
}

preview_html() {
    file="$1"
    if command -v wkhtmltopdf > /dev/null 2>&1; then
        if command -v pdftoppm > /dev/null 2>&1; then
            if [ ! -f "$CACHE" ]; then
                wkhtmltopdf "$file" - | pdftoppm -jpeg -f 1 -singlefile - "$CACHE"
            fi
        else
            preview_text "$file"
        fi
    elif command -v w3m > /dev/null 2>&1; then
        w3m -dump "$file"
        exit 1
    fi
    preview_image "${CACHE}.jpg" "$2" "$3" "$4" "$5"
}

preview_video () {
    file=$1
    if command -v ffmpegthumbnailer > /dev/null 2>&1; then
        if [ ! -f "${CACHE}.jpg" ]; then
            ffmpegthumbnailer -i "$file" -o "${CACHE}.jpg" -s 0 -q 5
        fi
        preview_image "${CACHE}.jpg" "$2" "$3" "$4" "$5"
    else
        preview_videoinfo "$file"
    fi
}

preview_audio () {
    file=$1
    preview_audioinfo "$file"
}


case "$(printf "%s\n" "$(readlink -f "$1")" | awk '{print tolower($0)}')" in
    *.tgz|*.tar.gz)
        tar tzf "$1"
        ;;
    *.tar.bz2|*.tbz2)
        tar tjf "$1"
        ;;
    *.tar.txz|*.txz)
        xz --list "$1"
        ;;
    *.tar)
        tar tf "$1"
        ;;
    *.zip|*.jar|*.war|*.ear|*.oxt)
        unzip -l "$1"
        ;;
    *.rar)
        unrar l "$1"
        ;;
    *.7z)
        7z l "$1"
        ;;
    *.[1-8])
        man "$1" | col -b
        ;;
    *.o)
        nm "$1"
        ;;
	  *.ino)
		    preview_text --language=cpp "$1"
		    ;;
    *.torrent)
        transmission-show "$1"
        ;;
    *.iso)
        iso-info --no-header -l "$1"
        ;;
    *.odt|*.ods|*.odp|*.sxw)
        odt2txt "$1"
        ;;
    *.doc)
        preview_doc "$1"
        ;;
    *.docx)
        preview_docx "$1"
        ;;
    *.xls|*.xlsx)
        preview_excel "$1"
        ;;
    *.wav|*.mp3|*.flac|*.m4a|*.wma|*.ape|*.ac3|\
        *.og[agx]|*.spx|*.opus|*.as[fx]|*.mka)
        preview_audio "$1"
        ;;
    *.pdf)
        preview_pdf "$1" "$2" "$3" "$4" "$5"
        ;;
    *.epub)
        preview_epub "$1" "$2" "$3" "$4" "$5"
        ;;
    *.mobi)
        preview_metainfo "$1"
        ;;
    *.cbz|*.cbr|*.cbt)
        preview_comic "$1" "$2" "$3" "$4" "$5"
        ;;
    *.html|*.hml|*.xml)
        preview_html "$1" "$2" "$3" "$4" "$5"
        ;;
    *.avi|*.mp4|*.wmv|*.dat|*.3gp|*.ogv|*.mkv|*.mpg|*.mpeg|\
        *.vob|*.fl[icv]|*.m2v|*.mov|*.webm|*.ts|*.mts|*.m4v|\
        *.r[am]|*.qt|*.divx)
        preview_video "$1" "$2" "$3" "$4" "$5"
        ;;
    *.bmp|*.jpg|*.jpeg|*.png|*.xpm|*.webp|*.gif|*.jfif|*.tiff|*.ico)
        preview_image "$1" "$2" "$3" "$4" "$5"
        ;;
    *.svg)
        [ ! -f "${CACHE}.jpg" ] && \
            convert "$1" "${CACHE}.jpg"
        preview_image "${CACHE}.jpg" "$2" "$3" "$4" "$5"
        ;;
    *.ino)
        preview_text --language=cpp "$1"
        ;;
    *.md|*.markdown)
        preview_md "$1"
        ;;
    *.md|*.markdown)
        preview_md "$1"
        ;;
    *.six|*.sixel)
        cat "$1"
        ;;
    *)
        preview_text "$1"
        ;;
esac
exit 0
