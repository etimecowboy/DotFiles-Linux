! # URxvt settings
! URxvt (also known as rxvt-unicode) is a lightweight but extensible
! X11 terminal emulator. URxvt takes its configuration from this file
! as variables prefixed with its name. The variables used here are but
! a small sampling of those available, but should give the user some
! indication of its capabilities. Each variable is explained in more
! detail here.

! ## Basic settings
URxvt*.loginShell:true
URxvt*.saveLines:32767
! with this set to true, when an app sends a bell to the terminal,
! awesome hilights the appropriate tag(s) ;)
! URxvt*.urgentOnBell:true

! ## Appearance
! The following variables hold aesthetic information about URxvt.
! Background and foreground are obvious. The font must be an XOrg font
! string, which can be selected graphically using the `xfontsel` tool.
! `scrollBar` indicates whether a scroll bar will be visible; other
! options include `left` and `right`.

! ### True transparency (need support of WM)
! URxvt*.depth:32
! URxvt*.background:rgba:0000/0000/00000/bbbb
! URxvt*.background:[85]#000000
URxvt*.background:Black
URxvt*.foreground:White
URxvt*.geometry:80x30

! ### Native transparency
! URxvt*.transparent:true
! Shading: 0 to 99 darkens, 101 to 200 lightens
! URxvt*.shading:30

! ### Scroll bar
URxvt*.scrollBar:true
URxvt*.scrollstyle:plain
URxvt*.scrollBar_right:true
URxvt*.scrollBar_floating:false
URxvt*.secondaryScroll:true
URxvt*.troughColor:#000000
URxvt*.scrollColor:#222222

! ### Fonts
! URxvt*.font:xft:Dejavu Sans Mono:pixelsize=12
URxvt*.font:xft:Dejavu Sans Mono:pixelsize=12:antialias=True, \
xft:Microsoft YaHei:antialias=True
URxvt*.letterSpace:-1

! ## Perl extentions
! URxvt can be extended using Perl scripts. The default directory for
! scripts is `/usr/lib/urxvt/perl`; since my scripts are not installed
! system-wide, I must provide it a colon-delimited list of directories
! from which to read scripts. See the README in that directory for
! details about the available plugins.
! URxvt*.perl-lib:/usr/lib/urxvt/perl

! One can extend URxvt using perl. The `perl-ext` and
! `perl-ext-common` variables list the plugins that should be loaded.
! These must exist in either the default path or one of the `perl-lib`
! paths defined above.

! There are two variables here because `perl-ext-common` is supposed
! to apply to all instances, whereas `perl-ext` would only apply to
! some instances. In most use cases, you will want to follow the
! pattern I use here, which is to place all custom plugins in
! `perl-ext-common`.
! URxvt*.perl-ext-common: default,url-select,clipboard
! URxvt*.perl-ext: default

! URxvt*.perl-ext-common: default,matcher,-option-popup,-selection-popup,-realine
! URxvt*.matcher.button: 1

URxvt*.perl-ext-common : default,tabbed,matcher,url-select,clipboard,keyboard-select
URxvt*.perl-ext : default

! ### default
! the Perl modules URxvt enables by default.

! ### matcher
URxvt*.matcher.button: 1
URxvt*.keysym.C-Delete: perl:matcher:last
URxvt*.keysym.M-Delete: perl:matcher:list

! ### tabbed
! URxvt*.tabbed.tabbar-fg: 2
! URxvt*.tabbed.tabbar-bg: 0
! URxvt*.tabbed.tab-fg: 3
! URxvt*.tabbed.tab-bg: 0

! ### tabbedex
! an improved version of the included `tabbed` created by stepb; this
! plugin allows multiple tabs within the same window with the ability
! to reorder and rename.

! The default keybindings for moving tabs with `tabbedex` are C-Left
! and C-Right, but I re-assigned those earlier to advance and withdraw
! one word at a time. Here, I remap the tab move keybindings to
! Control-Shift-Left and Control-Shift-Right.
! URxvt*.keysym.S-LEFT: perl:tabbedex:move_tab_left
! URxvt*.keysym.S-RIGHT: perl:tabbedex:move_tab_right
! I have mapped C-Down to create a new tab and C-Up to rename the
! current tab.
! URxvt*.keysym.S-DOWN: perl:tabbedex:new_tab
! URxvt*.keysym.S-LEFT: perl:tabbedex:rename_tab

! ### url-select
! an improved version of the included plugin of the same name, which
! allows using the keyboad to select and copy URLs printed to the
! terminal.

! Here I specify some basic options for the `url-select` plugin. The
! `urlLauncher` is the application with which launched URLs will open.
! `underlineURLs` indicates that URLs should be visually identified by
! underlining them, similar to a web browser. Lastly, `urlButton` is
! the mouse button to use to launch URLs on click. I use the middle
! mouse button.

URxvt*.urlLauncher: firefox
URxvt*.url-select.launcher: firefox -new-tab
URxvt*.underlineURLs: true
URxvt*.urlButton: 2
URxvt*.colorUL: #4682B4
! The keybinding to activate the default `url-select` plugin is Alt+u,
! so I map the same keybinding to the replacement.
URxvt.keysym.M-u : perl:url-select:select_next

! ### clipboard
! an extension for improved management of the clipboard,
! including the use multiple buffers.

! The below commands are what the `clipboard` plugin will use to copy
! and paste. These are the default values that I listed for reference
! purposes. They use the `clipboard` buffer rather than the default
! use of the `primary` buffer, which will not work in other GUI
! applications as expected.

URxvt*.copyCommand: xsel -ibp
URxvt*.pasteCommand: xsel -obp

! As the C+S+v and C+S+c are already used by URxvt for internal
! functions, I mapped copy and paste to Alt+c and Alt+v.

URxvt*.keysym.M-w: perl:clipboard:copy
URxvt*.keysym.C-y: perl:clipboard:paste
URxvt*.keysym.M-C-y: perl:clipboard:paste_escaped

! ### keyboard-select
URxvt*.keysym.M-Escape: perl:keyboard-select:activate
URxvt*.keysym.M-s: perl:keyboard-select:search

! ## Key bindings

! URxvt*.keysym.Home: \033[1~
! URxvt*.keysym.End:  \033[4~
URxvt*.keysym.Home:                   \033[7~
URxvt*.keysym.End:                    \033[8~

URxvt*.keysym.Find:                   \033[1~
URxvt*.keysym.Insert:                 \033[2~
URxvt*.keysym.Select:                 \033[4~
URxvt*.keysym.Prior:                  \033[5~
URxvt*.keysym.Next:                   \033[6~

! URxvt*.keysym.Up:                     \033[A
! URxvt*.keysym.Down:                   \033[B
! URxvt*.keysym.Right:                  \033[C
! URxvt*.keysym.Left:                   \033[D

! URxvt by default does not support using the control+arrows to
! advance or retreat one word at a time. The following two codes
! re-enable this.
! URxvt*.keysym.C-Up:                   \033[1;5A
! URxvt*.keysym.C-Down:                 \033[1;5B
! URxvt*.keysym.C-Right:                \033[1;5C
! URxvt*.keysym.C-Left:                 \033[1;5D

! URxvt*.keysym.Meta-Up:                \033[1;3A
! URxvt*.keysym.Meta-Down:              \033[1;3B
! URxvt*.keysym.Meta-Right:             \033[1;3C
! URxvt*.keysym.Meta-Left:              \033[1;3D

! URxvt*.keysym.S-Up:                   \033[1;2A
! URxvt*.keysym.S-Down:                 \033[1;2B
! URxvt*.keysym.S-Right:                \033[1;2C
! URxvt*.keysym.S-Left:                 \033[1;2D

! URxvt*.keysym.F1:   \033[11~
! URxvt*.keysym.F2:   \033[12~
! URxvt*.keysym.F3:   \033[13~
! URxvt*.keysym.F4:   \033[14~
! URxvt*.keysym.F5:   \033[15~
! URxvt*.keysym.F6:   \033[17~
! URxvt*.keysym.F7:   \033[18~
! URxvt*.keysym.F8:   \033[19~
! URxvt*.keysym.F9:   \033[20~
! URxvt*.keysym.F10:  \033[21~
! URxvt*.keysym.F11:  \033[23~
! URxvt*.keysym.F12:  \033[24~

! URxvt*.iso14755_52: false
